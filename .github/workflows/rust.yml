name: Rust

on:
  push:
    branches: [ main, development, actions ]
  pull_request:
    branches: [ main, development, actions ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-ubuntu:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          override: true
          
      - name: Build
        run: >
          cargo build --all --release &&
          strip target/release/rocket_testing &&
          mv target/release/rocket_testing target/release/rocket_testing_amd64 &&
          mkdir release &&
          mv resources target/release &&
          mv target/release/rocket_testing_amd64 target/release/Rocket.toml target/release/resources release &&
          zip release.zip release

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Ubuntu Release ${{ github.ref }}
          files: |
            release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:

    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install mysql
        shell: cmd
        run: |
          choco install mysql
          "C:\tools\mysql\current\bin\mysql" -e "create database diesel_test; create database diesel_unit_test; grant all on `diesel_%`.* to 'root'@'localhost';" -uroot

      - name: Set variables for mysql
        shell: bash
        run: |
          echo "MYSQL_DATABASE_URL=mysql://root@localhost/diesel_test" >> $GITHUB_ENV
          echo "MYSQL_EXAMPLE_DATABASE_URL=mysql://root@localhost/diesel_example" >> $GITHUB_ENV
          echo "MYSQL_UNIT_TEST_DATABASE_URL=mysql://root@localhost/diesel_unit_test" >> $GITHUB_ENV
          echo "MYSQLCLIENT_LIB_DIR=C:\tools\mysql\current\lib" >> $GITHUB_ENV

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          override: true

      - name: Build
        run: >
          cargo build --all --release &&
          mkdir release &&
          move resources target/release &&
          move target/release/rocket_testing.exe, target/release/Rocket.toml, target/release/resources release &&
          7z.exe a -tzip release

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Windows Release ${{ github.ref }}
          files: |
            target/release/rocket_testing.exe
            target/release/Rocket.toml
            target/release/resources
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}